{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport styled from 'styled-components';\nconst ArrowIcon = styled(ExpandLessIcon)`\n&&{\n    transform: ${props => props.open ? 'rotate(0)' : 'rotate(180deg)'};\n    transition: transform 300ms ease-in-out;\n    color: ${props => props.color ? props.color : '#000'};\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n}\n`;\nconst CustomSelect = styled.div`\n&&{\n    display: flex;\n    flex-direction: column;\n    width: ${props => props.width ? `${props.width}` : '200px'};\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n    text-align: center;\n    border: 1px solid #c3c3c3;\n    border-radius: 3px;\n    text-align: start;\n    margin: ${props => props.margin ? `${props.margin}` : '0 auto'};\n}\n`;\nconst SelectMain = styled.div`\n&&{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : '#fff'};\n    border-radius: 3px;\n    position: relative;\n}\n`;\nconst SelectDropdownHolder = styled.div`\n&&{\n    position: relative;\n    width: 100%;\n    height: 0px;\n}\n`;\nconst SelectDropdown = styled.div`\n&&{\n    position: absolute;\n    top: 3px;\n    z-index: 100000;\n    opacity: 1;\n    background-color: ${props => props.bgColor ? props.bgColor : '#fff'};\n    width: ${props => props.width ? `${props.width}` : '200px'};\n    max-height: ${props => props.isOpen ? '200px' : 0};\n    overflow-y: auto;\n    border: ${props => props.isOpen ? '1px' : 0} solid rgba(0,0,0,0.2);\n    transition: max-height 400ms ease-in-out, border 400ms ease-in-out;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n}\n`;\nconst SelectOption = styled.button`\n&&{\n    width: 100%;\n    cursor: pointer;\n    padding: 0.3em;\n    border: none;\n    outline: none;\n    text-align: start;\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n    color: ${props => props.color ? props.color : '#000'};\n    background-color: ${props => props.bgColor ? props.bgColor : '#fff'};\n    &:hover{\n        background-color: ${props => props.hoverColor ? props.hoverColor : 'orange'};\n    }\n}\n`;\nconst MainText = styled.div`\n&&{\n    width: 100%;\n    height: 100%;\n    padding: 0.4em;\n    color: ${props => props.color ? props.color : \"#000\"};\n}\n`;\nconst DropdownIconContainer = styled.div`\n&&{\n    height: 100%;\n    min-width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 0;\n    top: 0;\n}\n`;\n\nconst CustomInputSelect = _ref => {\n  let {\n    width,\n    dropdownOptions = [],\n    onChange,\n    dropdownPlaceholder,\n    dropdownValue,\n    mainFontColor,\n    mainBackgroundColor,\n    optionHoverColor,\n    fontSize,\n    dropdownBackgroundColor,\n    dropdownFontColor,\n    margin,\n    closeOnOutsideClick = true\n  } = _ref;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  let placeholder = dropdownPlaceholder ? dropdownPlaceholder : 'Select...';\n  const externalClickRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (externalClickRef.current && !externalClickRef.current.contains(event.target) && closeOnOutsideClick) {\n        setDropdownOpen(false);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [externalClickRef, closeOnOutsideClick]);\n  return /*#__PURE__*/React.createElement(CustomSelect, {\n    width: width,\n    fontSize: fontSize,\n    margin: margin,\n    onClick: () => setDropdownOpen(!dropdownOpen),\n    ref: externalClickRef\n  }, /*#__PURE__*/React.createElement(SelectMain, {\n    backgroundColor: mainBackgroundColor\n  }, /*#__PURE__*/React.createElement(MainText, {\n    color: mainFontColor\n  }, dropdownValue ? dropdownValue : placeholder), /*#__PURE__*/React.createElement(DropdownIconContainer, null, /*#__PURE__*/React.createElement(ArrowIcon, {\n    open: dropdownOpen,\n    color: mainFontColor,\n    fontSize: fontSize\n  }))), /*#__PURE__*/React.createElement(SelectDropdownHolder, null, /*#__PURE__*/React.createElement(SelectDropdown, {\n    isOpen: dropdownOpen,\n    width: width,\n    bgColor: dropdownBackgroundColor\n  }, dropdownOptions.map(op => /*#__PURE__*/React.createElement(SelectOption, {\n    onClick: onChange,\n    value: op,\n    type: \"button\",\n    hoverColor: optionHoverColor,\n    bgColor: dropdownBackgroundColor,\n    color: dropdownFontColor,\n    fontSize: fontSize\n  }, op)))));\n};\n\nexport default CustomInputSelect;","map":{"version":3,"sources":["C:/Users/chirag/career_selector/node_modules/react-animated-dropdown/dist/custom-input-select.js"],"names":["React","useState","useEffect","useRef","ExpandLessIcon","styled","ArrowIcon","props","open","color","fontSize","CustomSelect","div","width","margin","SelectMain","backgroundColor","SelectDropdownHolder","SelectDropdown","bgColor","isOpen","SelectOption","button","hoverColor","MainText","DropdownIconContainer","CustomInputSelect","dropdownOptions","onChange","dropdownPlaceholder","dropdownValue","mainFontColor","mainBackgroundColor","optionHoverColor","dropdownBackgroundColor","dropdownFontColor","closeOnOutsideClick","dropdownOpen","setDropdownOpen","placeholder","externalClickRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","createElement","onClick","ref","map","op","value","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport styled from 'styled-components';\nconst ArrowIcon = styled(ExpandLessIcon)`\n&&{\n    transform: ${props => props.open ? 'rotate(0)' : 'rotate(180deg)'};\n    transition: transform 300ms ease-in-out;\n    color: ${props => props.color ? props.color : '#000'};\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n}\n`;\nconst CustomSelect = styled.div`\n&&{\n    display: flex;\n    flex-direction: column;\n    width: ${props => props.width ? `${props.width}` : '200px'};\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n    text-align: center;\n    border: 1px solid #c3c3c3;\n    border-radius: 3px;\n    text-align: start;\n    margin: ${props => props.margin ? `${props.margin}` : '0 auto'};\n}\n`;\nconst SelectMain = styled.div`\n&&{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : '#fff'};\n    border-radius: 3px;\n    position: relative;\n}\n`;\nconst SelectDropdownHolder = styled.div`\n&&{\n    position: relative;\n    width: 100%;\n    height: 0px;\n}\n`;\nconst SelectDropdown = styled.div`\n&&{\n    position: absolute;\n    top: 3px;\n    z-index: 100000;\n    opacity: 1;\n    background-color: ${props => props.bgColor ? props.bgColor : '#fff'};\n    width: ${props => props.width ? `${props.width}` : '200px'};\n    max-height: ${props => props.isOpen ? '200px' : 0};\n    overflow-y: auto;\n    border: ${props => props.isOpen ? '1px' : 0} solid rgba(0,0,0,0.2);\n    transition: max-height 400ms ease-in-out, border 400ms ease-in-out;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n}\n`;\nconst SelectOption = styled.button`\n&&{\n    width: 100%;\n    cursor: pointer;\n    padding: 0.3em;\n    border: none;\n    outline: none;\n    text-align: start;\n    font-size: ${props => props.fontSize ? props.fontSize : '1rem'};\n    color: ${props => props.color ? props.color : '#000'};\n    background-color: ${props => props.bgColor ? props.bgColor : '#fff'};\n    &:hover{\n        background-color: ${props => props.hoverColor ? props.hoverColor : 'orange'};\n    }\n}\n`;\nconst MainText = styled.div`\n&&{\n    width: 100%;\n    height: 100%;\n    padding: 0.4em;\n    color: ${props => props.color ? props.color : \"#000\"};\n}\n`;\nconst DropdownIconContainer = styled.div`\n&&{\n    height: 100%;\n    min-width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 0;\n    top: 0;\n}\n`;\n\nconst CustomInputSelect = ({\n  width,\n  dropdownOptions = [],\n  onChange,\n  dropdownPlaceholder,\n  dropdownValue,\n  mainFontColor,\n  mainBackgroundColor,\n  optionHoverColor,\n  fontSize,\n  dropdownBackgroundColor,\n  dropdownFontColor,\n  margin,\n  closeOnOutsideClick = true\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  let placeholder = dropdownPlaceholder ? dropdownPlaceholder : 'Select...';\n  const externalClickRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (externalClickRef.current && !externalClickRef.current.contains(event.target) && closeOnOutsideClick) {\n        setDropdownOpen(false);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [externalClickRef, closeOnOutsideClick]);\n  return /*#__PURE__*/React.createElement(CustomSelect, {\n    width: width,\n    fontSize: fontSize,\n    margin: margin,\n    onClick: () => setDropdownOpen(!dropdownOpen),\n    ref: externalClickRef\n  }, /*#__PURE__*/React.createElement(SelectMain, {\n    backgroundColor: mainBackgroundColor\n  }, /*#__PURE__*/React.createElement(MainText, {\n    color: mainFontColor\n  }, dropdownValue ? dropdownValue : placeholder), /*#__PURE__*/React.createElement(DropdownIconContainer, null, /*#__PURE__*/React.createElement(ArrowIcon, {\n    open: dropdownOpen,\n    color: mainFontColor,\n    fontSize: fontSize\n  }))), /*#__PURE__*/React.createElement(SelectDropdownHolder, null, /*#__PURE__*/React.createElement(SelectDropdown, {\n    isOpen: dropdownOpen,\n    width: width,\n    bgColor: dropdownBackgroundColor\n  }, dropdownOptions.map(op => /*#__PURE__*/React.createElement(SelectOption, {\n    onClick: onChange,\n    value: op,\n    type: \"button\",\n    hoverColor: optionHoverColor,\n    bgColor: dropdownBackgroundColor,\n    color: dropdownFontColor,\n    fontSize: fontSize\n  }, op)))));\n};\n\nexport default CustomInputSelect;"]},"metadata":{},"sourceType":"module"}